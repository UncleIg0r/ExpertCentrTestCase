// <auto-generated />
using ExpertCentrTestCase.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExpertCentrTestCase.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240424080400_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ColumnEntityPriceListEntity", b =>
                {
                    b.Property<int>("ColumnsId")
                        .HasColumnType("int");

                    b.Property<int>("PriceListsId")
                        .HasColumnType("int");

                    b.HasKey("ColumnsId", "PriceListsId");

                    b.HasIndex("PriceListsId");

                    b.ToTable("ColumnEntityPriceListEntity");
                });

            modelBuilder.Entity("ExpertCentrTestCase.DataAccess.Entities.ColumnEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ColType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Columns");
                });

            modelBuilder.Entity("ExpertCentrTestCase.DataAccess.Entities.CustomValueEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColumnId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("ProductId");

                    b.ToTable("CustomValues");
                });

            modelBuilder.Entity("ExpertCentrTestCase.DataAccess.Entities.PriceListEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PriceLists");
                });

            modelBuilder.Entity("ExpertCentrTestCase.DataAccess.Entities.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Article")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriceListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PriceListId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ColumnEntityPriceListEntity", b =>
                {
                    b.HasOne("ExpertCentrTestCase.DataAccess.Entities.ColumnEntity", null)
                        .WithMany()
                        .HasForeignKey("ColumnsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpertCentrTestCase.DataAccess.Entities.PriceListEntity", null)
                        .WithMany()
                        .HasForeignKey("PriceListsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpertCentrTestCase.DataAccess.Entities.CustomValueEntity", b =>
                {
                    b.HasOne("ExpertCentrTestCase.DataAccess.Entities.ColumnEntity", "Column")
                        .WithMany("CustomValues")
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpertCentrTestCase.DataAccess.Entities.ProductEntity", "Product")
                        .WithMany("CustomValues")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Column");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ExpertCentrTestCase.DataAccess.Entities.ProductEntity", b =>
                {
                    b.HasOne("ExpertCentrTestCase.DataAccess.Entities.PriceListEntity", "PriceList")
                        .WithMany("Products")
                        .HasForeignKey("PriceListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PriceList");
                });

            modelBuilder.Entity("ExpertCentrTestCase.DataAccess.Entities.ColumnEntity", b =>
                {
                    b.Navigation("CustomValues");
                });

            modelBuilder.Entity("ExpertCentrTestCase.DataAccess.Entities.PriceListEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ExpertCentrTestCase.DataAccess.Entities.ProductEntity", b =>
                {
                    b.Navigation("CustomValues");
                });
#pragma warning restore 612, 618
        }
    }
}
